# Logging.
[logging]

# Log level.
#
# Options are: trace, debug, info, warn error.
level = "info"

# PostgreSQL configuration.
[postgresql]

dsn = "postgres://chirpstack:$tsdb_chirpstack_passwd@tsdb/chirpstack?sslmode=prefer"

# Max open connections.
#
# This sets the max. number of open connections that are allowed in the
# PostgreSQL connection pool.
max_open_connections = 10

# Min idle connections.
#
# This sets the min. number of idle connections in the PostgreSQL connection
# pool (0 = equal to max_open_connections).
min_idle_connections = 0


# Redis configuration.
[redis]

# Server address or addresses.
#
# Set multiple addresses when connecting to a cluster.
servers = ["redis://localhost/"]

# TLS enabled.
tls_enabled = false

# Redis Cluster.
#
# Set this to true when the provided URLs are pointing to a Redis Cluster
# instance.
cluster = false

# Network related configuration.
[network]

# Network identifier (NetID, 3 bytes) encoded as HEX (e.g. 010203).
net_id = "000000"

# Enabled regions.
#
# Multiple regions can be enabled simultaneously. Each region must match
# the 'name' parameter of the region configuration in '[[regions]]'.
enabled_regions = [
  "as923",
  "as923_2",
  "as923_3",
  "as923_4",
  "au915_0",
  "au915_1",
  "au915_2",
  "au915_3",
  "au915_4",
  "au915_5",
  "au915_6",
  "au915_7",
  "cn470_0",
  "cn470_1",
  "cn470_2",
  "cn470_3",
  "cn470_4",
  "cn470_5",
  "cn470_6",
  "cn470_7",
  "cn470_8",
  "cn470_9",
  "cn470_10",
  "cn470_11",
  "cn779",
  "eu433",
  "eu868",
  "in865",
  "ism2400",
  "kr920",
  "ru864",
  "us915_0",
  "us915_1",
  "us915_2",
  "us915_3",
  "us915_4",
  "us915_5",
  "us915_6",
  "us915_7",
]


# API interface configuration.
[api]

# interface:port to bind the API interface to.
bind = "0.0.0.0:8080"

secret = "${chirpstack_secret}"

# Secret.
#
# This secret is used for generating login and API tokens, make sure this
# is never exposed. Changing this secret will invalidate all login and API
# tokens. The following command can be used to generate a random secret:
#   openssl rand -base64 32
[integration]
enabled = ["mqtt"]

[integration.mqtt]
server = "tcp://localhost:1883/"

# PostgreSQL DSN.
#
# Format example: postgres://<USERNAME>:<PASSWORD>@<HOSTNAME>/<DATABASE>?sslmode=<SSLMODE>.
#
# SSL mode options:
#  * disable - Do not use TLS
#  * prefer - Attempt to connect with TLS but allow sessions without
#  * require - Require the use of TLS
json = true
